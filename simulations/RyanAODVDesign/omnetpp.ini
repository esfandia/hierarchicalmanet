[General]
repeat = 5
seed-set = ${repetition}
output-scalar-file-append = true
network = p2psipmanet.simulations.RyanAODVDesign.AODVNetworkCustom
debug-on-errors = true
cmdenv-express-mode = true
sim-time-limit = 15min #note: see oversim-specific parameters "transition-time" / "measurement time"

#**********************************************************************************************
# Configure positioning of network
#**********************************************************************************************
**.gw[0].*.constraintAreaMinX = 200m
**.gw[0].*.constraintAreaMaxX = 200m
**.gw[0].*.constraintAreaMinY = 200m
**.gw[0].*.constraintAreaMaxY = 200m

**.gw[1].*.constraintAreaMinX = 400m
**.gw[1].*.constraintAreaMaxX = 400m
**.gw[1].*.constraintAreaMinY = 400m
**.gw[1].*.constraintAreaMaxY = 400m

# Bottom-Right: (600, 600)
**.host[0].*.constraintAreaMinX = 600m
**.host[0].*.constraintAreaMaxX = 600m
**.host[0].*.constraintAreaMinY = 600m
**.host[0].*.constraintAreaMaxY = 600m

# Top-Left: (0, 0)
**.host[1].*.constraintAreaMinX = 0m
**.host[1].*.constraintAreaMaxX = 0m
**.host[1].*.constraintAreaMinY = 0m
**.host[1].*.constraintAreaMaxY = 0m

# Specify communication distance
*.gw*.wlan[*].radio.maxDistance = 400m
*.host*.wlan[*].radio.maxDistance = 400m

# Enable event log debugging
record-eventlog = true
# Output of eventlog (*.elog) file
eventlog-file=./results/results.elog
# Record for specified simulation time interval
eventlog-recording-intervals = 100..105

# Mobility Settings
**.host[*].mobilityType = "StationaryMobility"
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxX = 500m
**.mobility.constraintAreaMaxY = 500m
**.mobility.initFromDisplayString = true

#PING CONFIGS
**.numPingApps = 1
**.pingTestApp[*].packetSize = 64B
**.pingTestApp[*].printPing = true
**.pingTestApp[*].continuous = true	
**.pingTestApp[*].sendInterval = truncnormal(0.3s, 0.01s)
*.host[0].pingTestApp[0].startTime = 100s
*.host[0].pingTestApp[0].destAddresses = "host[1]"



#**********************************************************************************************
# configure routing and interface info
#**********************************************************************************************
# Broadcast HNA Messages
**.gw*.manetrouting.announcedNetworks = "0.0.0.0/0.0.0.0"

# Set cluster routing protocol
*.gw[*].routingProtocol = "OLSR"
*.host[*].routingProtocol = "OLSR"

# Set backbone routing protocol
**.backboneRoutingProtocol = "AODVUU"

# Bind the routing protocols to specific interfaces 
# NOTE: I believe this is needed for the AODV implementation, however it causes the network to
#		have a 100% failure in routing
#**.manetrouting.excludedInterfaces = "wlan1"
#**.manetrouting.interfaces = "wlan0"
#**.backbonemanetrouting.excludedInterfaces = "wlan0"
#**.backbonemanetrouting.interfaces = "wlan1"

#**********************************************************************************************
# AODVUU Routing Parameters
#**********************************************************************************************
**.log_to_file = false
**.hello_jittering = true
**.optimized_hellos = true
**.expanding_ring_search = true
**.local_repair = false
**.rreq_gratuitous = false
**.rt_log_interval = 0
**.unidir_hack = 0
**.internet_gw_mode = 0
**.receive_n_hellos = 1
**.ratelimit = 10
**.llfeedback = false 
**.wait_on_reboot = 0
**.active_timeout = 3000ms
**.internet_gw_address = "0.0.0.0"
**.RRERFoceDiscover = true

#**********************************************************************************************
#RADIO CONFIGS
#**********************************************************************************************
# Number of hosts & gateways
**.numHosts = 2
**.numGateway = 2

# number of radios per host
*.gw[*].numRadios = 2
*.host[*].numRadios = 1
 
# number of channels used
**.channelControl.numChannels = 3

## wlan interface - radio channel assignemnt
**.gw[0].wlan[0].radio.channelNumber = 0
**.host[1].wlan[0].radio.channelNumber = 0 # Add cluster membership to gw0 through channel 0
**.gw[1].wlan[0].radio.channelNumber = 1
**.host[0].wlan[0].radio.channelNumber = 1 # Add cluster membership to gw1 through channel 1
**.gw[*].wlan[1].radio.channelNumber = 2 # Backbone channel between gateways through channel 2

#**********************************************************************************************
# Network Configurator Settings
#**********************************************************************************************
# Network Configurator settings
**.configurator.dumpAddresses = true
**.configurator.dumpTopology = true
**.configurator.dumpRoutes = true
**.configurator.addStaticRoutes = false
**.configurator.addDefaultRoutes = false
**.configurator.addSubnetRoutes = false

# configure IPv4 addresses
# 	wlan0: Cluster Interface
#	wlan1: Backbone Interface
*.configurator.config = xml( \
"<config>\
		<interface hosts='gw[0] host[1]' names='wlan0' address='10.0.1.x' netmask='255.255.x.x'/>\
		<interface hosts='gw[0] gw[1]' names='wlan1' address='10.0.0.x' netmask='255.255.x.x'/>\
		<interface hosts='gw[1] host[0]' names='wlan0' address='10.0.2.x' netmask='255.255.x.x'/>\
</config>")

#**********************************************************************************************
[Config StaticRouting]
description = "Routing tables are statically defined"
#**********************************************************************************************
# Set network to Static NED
network = p2psipmanet.simulations.RyanAODVDesign.StaticRouting

# Set the routing protocols to be unused
*.gw[*].routingProtocol = ""
*.host[*].routingProtocol = ""
**.backboneRoutingProtocol = ""

# Network Configurator settings
**.configurator.dumpAddresses = true
**.configurator.dumpTopology = true
**.configurator.dumpRoutes = true
**.configurator.addStaticRoutes = false
**.configurator.addDefaultRoutes = false
**.configurator.addSubnetRoutes = false

# Configure IPv4 addresses, 
# Statically define the routes in the routing table
# 	wlan0: Cluster Interface
#	wlan1: Backbone Interface
*.configurator.config = xml( \
"<config>\
	<interface hosts='gw[0] host[1]' names='wlan0' address='10.0.1.x' netmask='255.255.x.x'/>\
	<interface hosts='gw[0] gw[1]' names='wlan1' address='10.0.0.x' netmask='255.255.x.x'/>\
	<interface hosts='gw[1] host[0]' names='wlan0' address='10.0.2.x' netmask='255.255.x.x'/>\
	<route hosts='host[0]' destination ='host[1]' netmask='255.255.255.255' gateway='gw[1]' interface='wlan0' />\
	<route hosts='gw[1]' destination='host[1]' netmask='255.255.255.255' gateway='gw[0]' interface='wlan1' />\
	<route hosts='gw[0]' destination='host[1]' netmask='255.255.255.255' interface='wlan0' />\
	<route hosts='gw[0]' destination='host[0]' netmask='255.255.255.255' gateway='gw[1]' interface='wlan1' />\
	<route hosts='gw[1]' destination='host[0]' netmask='255.255.255.255' interface='wlan0' />\
</config>")
